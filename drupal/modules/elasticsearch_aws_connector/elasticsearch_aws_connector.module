<?php

/**
 * @file
 * Elasticsearch AWS Connector module file.
 */

use Aws\Credentials\CredentialProvider;
use Aws\Credentials\Credentials;
use Aws\ElasticsearchService\ElasticsearchPhpHandler;

const ELASTICSEARCH_AWS_CONNECTOR_AWS_SR_KEY = 'elasticsearch_aws_connector_aws_signed_requests';

include_once __DIR__ . '/elasticsearch_aws_connector.forms.inc';

/**
 * Implements hook_elasticsearch_connector_load_library_options_alter().
 */
function elasticsearch_aws_connector_elasticsearch_connector_load_library_options_alter(array &$options)
{

    // Return if no authentication is used.
    if (!isset($options['auth'])) {
        return;
    }

    $sign_requests = false;

    // Loop over the hosts and check if AWS Signed Requests should be applied.
    foreach ($options['hosts'] as $key => $url) {
        if ($options['auth'][$url]['method'] == ELASTICSEARCH_AWS_CONNECTOR_AWS_SR_KEY) {
            $sign_requests = true;
        }
    }

    // Return if AWS Signed Requests is not enabled.
    if (!$sign_requests) {
        return;
    }

    $clusterId = \Drupal\elasticsearch_connector\Entity\Cluster::getDefaultCluster();
    /** @var \Drupal\elasticsearch_connector\Entity\Cluster $cluster */
    $cluster = \Drupal\elasticsearch_connector\Entity\Cluster::load($clusterId);

    // Return if AWS Region is not set.
    if (empty($cluster->options['elasticsearch_aws_connector_aws_region'])) {
        drupal_set_message('One must configure the AWS region.');

        return;
    }

    $aws_region = $cluster->options['elasticsearch_aws_connector_aws_region'];
    if ($cluster->options['elasticsearch_aws_connector_aws_authentication_type'] == 'aws_credentials') {
        $provider = CredentialProvider::fromCredentials(
            new Credentials(
                $cluster->options['elasticsearch_aws_connector_aws_credentials_key'],
                $cluster->options['elasticsearch_aws_connector_aws_credentials_secret']
            )
        );
        $options['handler'] = new ElasticsearchPhpHandler($aws_region, $provider);
    } else {
        $options['handler'] = new ElasticsearchPhpHandler($aws_region);
    }
}
