{#
/**
 * @file
 * Theme override for status messages.
 *
 * Displays status, error, and warning messages, grouped by type.
 *
 * An invisible heading identifies the messages for assistive technology.
 * Sighted users see a colored box. See http://www.w3.org/TR/WCAG-TECHS/H69.html
 * for info.
 *
 * Add an ARIA label to the contentinfo area so that assistive technology
 * user agents will better describe this landmark.
 *
 * Available variables:
 * - message_list: List of messages to be displayed, grouped by type.
 * - status_headings: List of all status types.
 * - display: (optional) May have a value of 'status' or 'error' when only
 *   displaying messages of that specific type.
 * - attributes: HTML attributes for the element, including:
 *   - class: HTML classes.
 */
#}
<div class="row">
    {% for type, messages in message_list %}
        <div class="error-summary" role="contentinfo"
             aria-label="{{ status_headings[type] }}"{{ attributes|without('role', 'aria-label') }}>
            {% if type == 'error' %}
            <div role="alert">
                <h1 class="heading-medium error-summary-heading">{{ 'An error as occured'|t }}</h1>
                {% endif %}
                {% if status_headings[type] %}
                    <h2 class="visually-hidden">{{ status_headings[type] }}</h2>
                {% endif %}
                <ul class="error-summary-list">
                    {% for message in messages %}
                        {% if message is iterable %}
                            <li><a href="#{{ message.key }}">{{ message.text }}</a></li>
                        {% else %}
                            <li>{{ message }}</li>
                        {% endif %}
                    {% endfor %}
                </ul>
                {% if type == 'error' %}
            </div>
            {% endif %}
        </div>
    {% endfor %}
</div>
